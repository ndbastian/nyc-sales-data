nms <- names(out_list)
col_class_df <- read_csv("PLUTO_ARCHIVES/nyc_pluto_16v2%20/SI.csv", n_max = 10000)
col_class_spec <- spec(col_class_df)
col_class_spec$cols$MaxAllwFAR <- col_character()
col_class_spec$cols$CB2000 <- col_character()
all_years <- rep(2003:2016, each = 5)
all_years <- all_years[-which(grepl("2008",all_years))]
out_list_fin <- list()
for (j in length(names_list_df):1){
message("\n### outer loop ",length(names_list_df)-j+1," of ",length(names_list_df)," at ", Sys.time())
dol_df <- names_list_df %>% select(j)
for(nm in nrow(dol_df):1){
message("\n......inner loop ",nrow(dol_df)-nm+1," of ",nrow(dol_df), " at ", Sys.time())
out_idx <- paste0(j,nm)
the_name <- names(dol_df)
the_file <- paste0("PLUTO_ARCHIVES/",the_name,"/",dol_df[nm,])
readin <- suppressWarnings(suppressMessages(read_csv(the_file, col_names = T, progress = F, col_types = col_class_spec)))
readin$file <- the_file
readin$Year <- tail(all_years,1)
all_years <- head(all_years,length(all_years)-1)
out_list_fin[[out_idx]] <- readin
}
}
final_pluto_df <- bind_rows(out_list_fin)
beepr::beep(4)
glimpse(v)
glimpse(final_pluto_df)
final_pluto_df$Year %>% table()
ID_Building_Type <- function(x){
dat<-x
dat<-dplyr::mutate(dat,Building_Type=substr(BldgClass,1,1))
}
Convert_XY <- function(x) {
library(proj4)
# NEW YORK LONG ISLAND STATE PLANE PROJECTION
# see: http://spatialreference.org/ref/esri/102718/
proj4string <-
"+proj=lcc +lat_1=40.66666666666666 +lat_2=41.03333333333333 +lat_0=40.16666666666666
+lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +datum=NAD83 +to_meter=0.3048006096012192 +no_defs"
xy <- data.frame(x=x$XCoord, y=x$YCoord)
pj <- proj4::project(xy, proj4string, inverse=TRUE)
latlon <- data.frame(lat=pj$y, lon=pj$x)
x <- x %>%
mutate(lat = latlon$lat
,lon = latlon$lon)
}
library(proj4)
ID_Building_Type <- function(x){
dat<-x
dat<-dplyr::mutate(dat,Building_Type=substr(BldgClass,1,1))
}
Convert_XY <- function(x) {
library(proj4)
# NEW YORK LONG ISLAND STATE PLANE PROJECTION
# see: http://spatialreference.org/ref/esri/102718/
proj4string <-
"+proj=lcc +lat_1=40.66666666666666 +lat_2=41.03333333333333 +lat_0=40.16666666666666
+lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +datum=NAD83 +to_meter=0.3048006096012192 +no_defs"
xy <- data.frame(x=x$XCoord, y=x$YCoord)
pj <- proj4::project(xy, proj4string, inverse=TRUE)
latlon <- data.frame(lat=pj$y, lon=pj$x)
x <- x %>%
mutate(lat = latlon$lat
,lon = latlon$lon)
}
final_pluto_df <- final_pluto_df %>% mutate(Building_Type = substr(BldgClass,1,1))
final_pluto_df <- Convert_XY(final_pluto_df)
beepr::beep(4)
final_pluto_df
glimpse(final_pluto_df)
write_csv(final_pluto_df,"/Users/timkiely/Dropbox (hodgeswardelliott)/hodgeswardelliott Team Folder/Teams/Data/Tim_Kiely/PLUTO/pluto-combined/pluto_all.csv")
beepr::beep(4)
write_rds(final_pluto_df,"/Users/timkiely/Dropbox (hodgeswardelliott)/hodgeswardelliott Team Folder/Teams/Data/Tim_Kiely/PLUTO/pluto-combined/pluto_all_compressed.rds", compress = "gz")
beepr::beep(4)
beepr::beep(4)
paste0(names(pluto_lean), collapse = "', ")
paste0(names(final_pluto_df), collapse = "', ")
paste0(names(final_pluto_df), collapse = "', '")
names(final_pluto_df)
paste0(tail(names(final_pluto_df),100), collapse = "', '")
paste0(tail(names(final_pluto_df),30), collapse = "', '")
pluto_lean <-
final_pluto_df %>%
select('Year', 'Borough', 'Block', 'Lot', 'ZipCode'
, 'Address'
, 'BldgClass', 'Easements', 'OwnerType', 'OwnerName', 'LotArea'
, 'BldgArea', 'ComArea', 'ResArea', 'OfficeArea', 'RetailArea'
, 'GarageArea', 'StrgeArea', 'FactryArea', 'OtherArea'
, 'NumBldgs', 'NumFloors', 'UnitsRes', 'UnitsTotal'
, 'LotFront', 'LotDepth', 'BldgFront', 'BldgDepth', 'Ext', 'ProxCode'
, 'IrrLotCode', 'LotType', 'BsmtCode', 'AssessLand', 'AssessTot'
, 'ExemptLand', 'ExemptTot', 'YearBuilt', 'YearAlter1'
, 'YearAlter2', 'BuiltFAR', 'ResidFAR'
, 'CommFAR', 'FacilFAR', 'BoroCode', 'BBL', 'CondoNo',
, 'XCoord', 'YCoord', 'file', 'MaxAllwFAR', 'AssessTotal'
, 'ExemptTotal', 'CornerLot', 'FAR', 'Building_Type', 'lat', 'lon'
)
pluto_lean <-
final_pluto_df %>%
select('Year', 'Borough', 'Block', 'Lot', 'ZipCode'
, 'Address'
, 'BldgClass', 'Easements', 'OwnerType', 'OwnerName', 'LotArea'
, 'BldgArea', 'ComArea', 'ResArea', 'OfficeArea', 'RetailArea'
, 'GarageArea', 'StrgeArea', 'FactryArea', 'OtherArea'
, 'NumBldgs', 'NumFloors', 'UnitsRes', 'UnitsTotal'
, 'LotFront', 'LotDepth', 'BldgFront', 'BldgDepth', 'Ext', 'ProxCode'
, 'IrrLotCode', 'LotType', 'BsmtCode', 'AssessLand', 'AssessTot'
, 'ExemptLand', 'ExemptTot', 'YearBuilt', 'YearAlter1'
, 'YearAlter2', 'BuiltFAR', 'ResidFAR'
, 'CommFAR', 'FacilFAR', 'BoroCode', 'BBL', 'CondoNo'
, 'XCoord', 'YCoord', 'file', 'MaxAllwFAR', 'AssessTotal'
, 'ExemptTotal', 'CornerLot', 'FAR', 'Building_Type', 'lat', 'lon'
)
pluto_lean
final_pluto_df
write_rds(pluto_lean,"/Users/timkiely/Dropbox (hodgeswardelliott)/hodgeswardelliott Team Folder/Teams/Data/Tim_Kiely/PLUTO/pluto-combined/pluto_lean_compressed_2003_2016.rds", compress = "gz")
beepr::beep(4)
"data/PLUTO_ARCHIVES"%in%dir()
dir()
dir("data")
"data/PLUTO_ARCHIVES"%in%dir()
"PLUTO_ARCHIVES"%in%dir('data')
if(!"PLUTO_ARCHIVES"%in%dir('data')){
dir.create("data/PLUTO_ARCHIVES")
}
if(!"data"%in%dir()){
dir.create("data")
}
file_names <- gsub(".zip","",basename(file_list))
file_names
library(tidyverse)
file_list<-
c('http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_02a.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_03c.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_04c.zip'
,'https://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_05d.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_06c.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_07c.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_09v1.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_09v2.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_10v1.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_10v2.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_11v1.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_11v2.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_12v1.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_12v2.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_13v1.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_13v2.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_14v1.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_14v2.zip'
,'http://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_15v1.zip'
,'https://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyc_pluto_16v2%20.zip'
)
# automatically creates a sub directory within specified path
if(!"data"%in%dir()){
dir.create("data")
}
if(!"PLUTO_ARCHIVES"%in%dir('data')){
dir.create("data/PLUTO_ARCHIVES")
}
file_names <- gsub(".zip","",basename(file_list))
file_names
message("\nStarting from top of while loop...");message(Sys.time())
rm(list=ls())
library(tidyverse)
library(lubridate)
# function to quickly glimpse BBL
lookat <- function(boro= 1,blck = 829,lt = 16,data = nyc_sales_clean_1) data %>% filter(BOROUGH == boro, BLOCK == as.numeric(blck), LOT == as.numeric(lt)) %>% arrange(desc(SALE_DATE)) %>% glimpse()
lookhead <- function(boro= 1,blck = 829,lt = 16,data = nyc_sales_clean_1) data %>% filter(BOROUGH == boro, BLOCK == blck, LOT == lt)
nyc_sales_raw <- read_rds("data/nyc-sales-data-raw.rds")
nyc_sales_raw <- nyc_sales_raw %>% mutate_if(.predicate = is.factor,.funs = as.character)
nyc_sales_raw
nyc_sales_raw$SALE.YEAR %>% table
nyc_sales_raw$SALE.YEAR %>% range
rm(list=ls())
library(tidyverse)
library(sf)
library(stringr)
Boro <- 1
Blck <- 829
lot <- '16'
sale_augmented %>% filter(BOROUGH == Boro, BLOCK == Blck, LOT == lot) %>% glimpse()
pluto_lean %>% filter(BOROUGH == Boro, Block == Blck, Lot == lot) %>% select(Year) %>% table()
# sales data ------------------------------------------------------------------
sale_augmented <- read_rds("data/sales_augmented.rds")
# function to quickly glimpse BBL
lookat <- function(boro= 1,blck = 829,lt = 16) sale_augmented %>% filter(BOROUGH == boro, BLOCK == blck, LOT == lt) %>% arrange(desc(SALE_DATE)) %>% glimpse()
lookhead <- function(boro= 1,blck = 829,lt = 16) sale_augmented %>% filter(BOROUGH == boro, BLOCK == blck, LOT == lt)
sale_augmented %>% filter(BOROUGH == 1, BLOCK == 829, LOT == 16) %>%
select(ADDRESS,SALE_DATE, SALE.PRICE, AssessTotal) %>%
mutate(SalePriceToAssesstmentRatio = SALE.PRICE/AssessTotal)
sale_augmented %>%
select(ADDRESS,SALE_DATE,Building_Type, SALE.PRICE, AssessTotal) %>%
mutate(SalePriceToAssesstmentRatio = SALE.PRICE/AssessTotal) %>%
filter(!is.na(SalePriceToAssesstmentRatio)) %>%
filter(AssessTotal<500000000) %>%
#filter(SALE.PRICE>5e+07) %>%
ggplot()+
aes(x = SALE.PRICE, y=AssessTotal, group = Building_Type, color = Building_Type)+
geom_point()+
geom_smooth(se=F, method = "lm")+
scale_y_continuous(labels=scales::comma)
library(modelr)
f1 <- lm(AssessTotal~SALE.PRICE, data = sale_augmented)
group_model <- function(df) {
lm(AssessTotal ~ SALE.PRICE, data = df)
}
extract_coef <- function(model) coef(model)["SALE.PRICE"]
extract_coef(f1)
extract_coef(f1)
by_group<-
sale_augmented %>%
select(ADDRESS,SALE_DATE,Building_Type, SALE.PRICE, AssessTotal) %>%
mutate(SalePriceToAssesstmentRatio = SALE.PRICE/AssessTotal) %>%
filter(!is.na(SalePriceToAssesstmentRatio)) %>%
mutate(AssessSD = sd(AssessTotal), AssessZscore = scale(AssessTotal)) %>%
#filter(abs(AssessZscore)<3) %>%
group_by(Building_Type) %>%
nest() %>%
mutate(Number_of_Sales = map_dbl(data,nrow)) %>%
mutate(model = map(data, group_model)) %>%
mutate(Sale_Coef = map_dbl(model,extract_coef)) %>%
mutate(glance = map(model, broom::glance)) %>%
unnest(glance) %>%
arrange(-Sale_Coef) %>%
filter(p.value <= (0.05))
by_group
rm(list=ls())
library(tidyverse)
library(lubridate)
# function to quickly glimpse BBL
lookat <- function(boro= 1,blck = 829,lt = 16,data = nyc_sales_clean_1) data %>% filter(BOROUGH == boro, BLOCK == as.numeric(blck), LOT == as.numeric(lt)) %>% arrange(desc(SALE_DATE)) %>% glimpse()
lookhead <- function(boro= 1,blck = 829,lt = 16,data = nyc_sales_clean_1) data %>% filter(BOROUGH == boro, BLOCK == blck, LOT == lt)
nyc_sales_raw <- read_rds("data/nyc-sales-data-raw.rds")
nyc_sales_raw <- nyc_sales_raw %>% mutate_if(.predicate = is.factor,.funs = as.character)
nyc_sales_clean_1 <-
nyc_sales_raw %>%
mutate_if(.predicate = is.character, .funs = trimws) %>%
mutate(SALE.DATE1 = ymd(SALE.DATE, quiet = T)
,SALE.DATE2 = mdy(SALE.DATE, quiet = T)
,SALE_DATE = SALE.DATE1
,SALE_DATE = if_else(is.na(SALE_DATE),SALE.DATE2,SALE_DATE)
,SALE_YEAR = lubridate::year(SALE_DATE)
) %>%
select(-SALE.DATE,-SALE.DATE1,-SALE.DATE2,-SALE.YEAR) %>%
mutate(BOROUGH = as.integer(BOROUGH))
nyc_sales_clean_1$SALE_YEAR %>% table()
# WHY ARE THERE SO MANY TRANSACTIONS ON THE SAME DAY FOR 1 BBL???
# ANSWER: THese tansactions are "Timeshare Deeds" related to hotels.
# Solution: map in ACRIS data and filter out "timeshare deeds"
nyc_sales_clean_1 %>%
#filter(!BUILDING.CLASS.AT.PRESENT%in%c('H3')) %>%
group_by_at(vars(BOROUGH:BUILDING.CLASS.AT.TIME.OF.SALE,SALE_DATE,SALE_YEAR)) %>%
summarise(count = n()
,top_class = head(BUILDING.CLASS.AT.PRESENT,1)) %>%
ungroup() %>%
select(BOROUGH,BLOCK,LOT,count,top_class) %>%
arrange(-count)
# here's a hotel with almost 300 transactions on the same day in 2016:
# a hotel with timeshare deeds:
lookat(1,1009,37)
# condo hotels
lookat(1,1006,1303)
lookat(1,1009,37)
nyc_sales_clean_1
nyc_sales_clean_1 %>%
#filter(!BUILDING.CLASS.AT.PRESENT%in%c('H3')) %>%
group_by_at(vars(BOROUGH:BUILDING.CLASS.AT.TIME.OF.SALE,SALE_DATE,SALE_YEAR)) %>%
summarise(count = n()
,top_class = head(BUILDING.CLASS.AT.PRESENT,1)) %>%
ungroup() %>%
select(BOROUGH,BLOCK,LOT,count,top_class) %>%
arrange(-count)
lookat(1,1009,37)
lookat(1,1006,1303)
nyc_sales_clean_1
trimws
?trimws
nyc_sales_clean_1$SALE_YEAR %>% table()
?assign
lookat(1,1009,37)
lookat(1,1006,1303)
pluto_lean <- read_rds("data/pluto_lean.rds")
sale_augmented <-
left_join(nyc_sales_clean_1,pluto_lean, by = c(
"BOROUGH"="BOROUGH"
,"BLOCK"="Block"
,"LOT"="Lot"
,"SALE_YEAR" = "Year"
))
sale_augmented$Address %>% is.na() %>% table()
acris <- read_csv("/Users/timkiely/Downloads/ACRIS_-_Real_Property_Master.csv")
sale_augmented2 <-
left_join(sale_augmented,acris, by = c(
"BOROUGH"="BOROUGH"
,"BLOCK"="Block"
,"LOT"="Lot"
,"SALE_YEAR" = "Year"
))
sale_augmented$Address %>% is.na() %>% table()
sale_augmented2
sale_augmented
acris
nyc_sales_clean_1
sale_augmented$Address %>% is.na() %>% table()
library(tidyverse)
# sales data --------------------------------------------------------------
nyc_sales_raw <- read_rds('data/nyc-sales-data-raw.rds') %>% mutate_if(.predicate = is.factor,.funs = as.character)
nyc_sales_clean_1 <-
nyc_sales_raw %>%
mutate_if(.predicate = is.character, .funs = trimws) %>%
mutate(SALE.DATE1 =  lubridate::ymd(SALE.DATE, quiet = T)
,SALE.DATE2 =  lubridate::mdy(SALE.DATE, quiet = T)
,SALE_DATE = SALE.DATE1
,SALE_DATE = if_else(is.na(SALE_DATE),SALE.DATE2,SALE_DATE)
,SALE_YEAR = lubridate::year(SALE_DATE)
) %>%
select(-SALE.DATE,-SALE.DATE1,-SALE.DATE2,-SALE.YEAR) %>%
mutate(BOROUGH = as.integer(BOROUGH))
# combine with PLUTO ------------------------------------------------------
pluto_lean <- read_rds("data/pluto_lean.rds")
sales_not_in_pluto
sales_not_in_pluto <-
anti_join(nyc_sales_clean_1,pluto_lean
, by = c(
"BOROUGH" = "BOROUGH"
, "BLOCK" = "Block"
, "LOT" = "Lot"
, "SALE_YEAR" = "Year"
)
)
sales_not_in_pluto
pad_bbl_expanded <- read_rds("data/PAD_Condo_BBLs_expanded_v002.rds")
pad_bbl_expanded <- read_rds("data/PAD_Condo_BBLs_expanded_v002.rds")
sales_not_in_pluto_or_pad <-
anti_join(sales_not_in_pluto %>% mutate(bbl = paste(BOROUGH,as.numeric(BLOCK),as.numeric(LOT),sep="_"))
,pad_bbl_expanded
, by = c("bbl"="new_bbl"))
message("All sales in database: ",scales::comma(nrow(nyc_sales_clean_1)))
message("Sales that cannot be mapped to PLUTO BBL: ",scales::comma(nrow(sales_not_in_pluto)))
message("Sales that cannot be mapped to PLUTO or PAD: ",scales::comma(nrow(sales_not_in_pluto_or_pad)))
message(scales::comma(nrow(sales_not_in_pluto_or_pad))
," out of "
, scales::comma(nrow(nyc_sales_clean_1))
," or "
,scales::percent(nrow(sales_not_in_pluto_or_pad)/nrow(nyc_sales_clean_1))
, " of records could not be matched")
pad_bbl_expanded
acris
pad_bbl_expanded
pad_bbl_expanded
bbl_dat <- read_csv("data/pad17b/bobabbl.txt")
bbl_dat
pad_bbl_expanded
pad_bbl_expanded <- read_rds("data/PAD_Condo_BBLs_expanded_v002.rds")
pad_bbl_expanded
pluto_lean
pluto_lean
glimpse(pluto_lean)
pad_bbl_expanded
pluto_lean
pad_expanded_with_pluto <-
anti_join(pad_bbl_expanded %>% mutate(bbl = paste(BOROUGH,as.numeric(BLOCK),as.numeric(LOT),sep="_"))
, pluto_lean %>% mutate(bbl = paste(BOROUGH,as.numeric(Block),as.numeric(Lot),sep="_"))
, by = "bbl"
)
pad_bbl_expanded
pad_expanded_with_pluto <-
anti_join(pad_bbl_expanded %>% mutate(bbl = paste(new_boro,as.numeric(new_block),as.numeric(new_lot),sep="_"))
, pluto_lean %>% mutate(bbl = paste(BOROUGH,as.numeric(Block),as.numeric(Lot),sep="_"))
, by = "bbl"
)
pad_expanded_with_pluto
beepr::beep(4)
message("All sales in database: ",scales::comma(nrow(nyc_sales_clean_1)))
message("Sales that cannot be mapped to PLUTO BBL: ",scales::comma(nrow(sales_not_in_pluto)))
message("Sales that cannot be mapped to PLUTO or PAD: ",scales::comma(nrow(sales_not_in_pluto_or_pad)))
message(scales::comma(nrow(sales_not_in_pluto_or_pad))
," out of "
, scales::comma(nrow(nyc_sales_clean_1))
," or "
,scales::percent(nrow(sales_not_in_pluto_or_pad)/nrow(nyc_sales_clean_1))
, " of records could not be matched")
pad_expanded_with_pluto$loblock %>% table
pad_bbl_expanded
?left_join
pad_bbl_expanded
pluto_lean
pad_bbl_expanded %>% mutate(bbl = paste(new_boro,as.numeric(new_block),as.numeric(new_lot),sep="_")) %>% glimpse
pad_expanded_with_pluto <-
anti_join(pad_bbl_expanded %>% mutate(billing_bbl = paste(boro,as.numeric(block),as.numeric(lot),sep="_"))
, pluto_lean %>% mutate(bbl = paste(BOROUGH,as.numeric(Block),as.numeric(Lot),sep="_"))
, by = c("billing_bbl"="bbl")
)
beepr::beep(4)
pad_expanded_with_pluto
rm(pad_expanded_with_pluto)
pad_expanded_with_pluto <-
anti_join(pad_bbl_expanded %>% mutate(billing_bbl = paste(boro,as.numeric(block),as.numeric(lot),sep="_"))
, pluto_lean %>% mutate(bbl = paste(BOROUGH,as.numeric(Block),as.numeric(Lot),sep="_"))
, by = c("billing_bbl"="bbl")
)
beepr::beep(4)
pad_expanded_with_pluto
pad_bbl_expanded
rm(pad_expanded_with_pluto)
pad_expanded_with_pluto <-
anti_join(pad_bbl_expanded %>% mutate(billing_bbl = paste(billboro,as.numeric(billblock),as.numeric(billlot),sep="_"))
, pluto_lean %>% mutate(bbl = paste(BOROUGH,as.numeric(Block),as.numeric(Lot),sep="_"))
, by = c("billing_bbl"="bbl")
); beepr::beep(4)
pad_expanded_with_pluto
pad_bbl_expanded
rm(pad_expanded_with_pluto)
pad_expanded_with_pluto <-
anti_join(pad_bbl_expanded %>% mutate(billing_bbl = paste(loboro,as.numeric(loblock),as.numeric(lolot),sep="_"))
, pluto_lean %>% mutate(bbl = paste(BOROUGH,as.numeric(Block),as.numeric(Lot),sep="_"))
, by = c("billing_bbl"="bbl")
); beepr::beep(4)
pad_expanded_with_pluto
pad_bbl_expanded
head(pad_expanded_with_pluto)
lookat <- function(boro= 1,blck = 829,lt = 16,data = nyc_sales_clean_1) data %>% filter(BOROUGH == boro, BLOCK == as.numeric(blck), LOT == as.numeric(lt)) %>% arrange(desc(SALE_DATE)) %>% glimpse()
lookhead <- function(boro= 1,blck = 829,lt = 16,data = nyc_sales_clean_1) data %>% filter(BOROUGH == boro, BLOCK == blck, LOT == lt)
lookat(5,27000,0523)
lookat <- function(boro= 1,blck = 829,lt = 16,data = pluto_lean) data %>% filter(BOROUGH == boro, BLOCK == as.numeric(blck), LOT == as.numeric(lt)) %>% arrange(desc(SALE_DATE)) %>% glimpse()
lookhead <- function(boro= 1,blck = 829,lt = 16,data = pluto_lean) data %>% filter(BOROUGH == boro, BLOCK == blck, LOT == lt)
lookat(5,27000,0523)
pluto_lean
lookat <- function(boro= 1,blck = 829,lt = 16,data = pluto_lean) data %>% filter(BOROUGH == boro, Block == as.numeric(blck), Lot == as.numeric(lt)) %>% arrange(desc(SALE_DATE)) %>% glimpse()
lookhead <- function(boro= 1,blck = 829,lt = 16,data = pluto_lean) data %>% filter(BOROUGH == boro, Block == blck, Lot == lt)
lookat(5,27000,0523)
head(pad_expanded_with_pluto)
head(pad_expanded_with_pluto) %>% glimspe()
head(pad_expanded_with_pluto) %>% glimpse()
lookat(5,27000,523)
lookat(5,27000,0523)
pad_expanded_with_pluto
head(pad_expanded_with_pluto) %>% glimpse()
summary(pad_expanded_with_pluto)
head(pad_expanded_with_pluto) %>% glimpse()
pad_expanded_with_pluto$boro %>% tbale
pad_expanded_with_pluto$boro %>% table
pad_expanded_with_pluto %>% arrange(boro) %>% head() %>% glimpse()
rm(pad_expanded_with_pluto)
pad_expanded_with_pluto <-
anti_join(pad_bbl_expanded %>% mutate(billing_bbl = paste(billboro,as.numeric(billblock),as.numeric(billlot),sep="_"))
, pluto_lean %>% mutate(bbl = paste(BOROUGH,as.numeric(Block),as.numeric(Lot),sep="_"))
, by = c("billing_bbl"="bbl")
); beepr::beep(4)
pad_expanded_with_pluto
pad_expanded_with_pluto %>% arrange(boro) %>% head() %>% glimpse()
pad_expanded_with_pluto
rm(pad_expanded_with_pluto)
pad_expanded_with_pluto <-
anti_join(pad_bbl_expanded %>% mutate(billing_bbl = paste(new_boro,as.numeric(new_block),as.numeric(new_lot),sep="_"))
, pluto_lean %>% mutate(bbl = paste(BOROUGH,as.numeric(Block),as.numeric(Lot),sep="_"))
, by = c("billing_bbl"="bbl")
); beepr::beep(4)
pad_expanded_with_pluto
pad_expanded_with_pluto %>% arrange(boro) %>% head() %>% glimpse()
# This script takes NYC's 2017 Property Address Directory (PAD) file and
# maps each address to PLUTO.
# pad_bbl_expanded was created by adding a unique
# row for every row in PAD that had a range of lots for
# a single BBL. These were mostly condos
pad_bbl_expanded <- read_rds("data/PAD_Condo_BBLs_expanded_v002.rds")
pluto_lean <- read_rds("data/pluto_lean.rds")
lookat <- function(boro= 1,blck = 829,lt = 16,data = pluto_lean) data %>% filter(BOROUGH == boro, Block == as.numeric(blck), Lot == as.numeric(lt)) %>% arrange(desc(SALE_DATE)) %>% glimpse()
lookhead <- function(boro= 1,blck = 829,lt = 16,data = pluto_lean) data %>% filter(BOROUGH == boro, Block == blck, Lot == lt)
# join the PAD file to PLUTO using the 'billing bbl' fields
rm(pad_expanded_with_pluto)
pad_expanded_with_pluto <-
anti_join(pad_bbl_expanded %>% mutate(billing_bbl = paste(new_boro,as.numeric(new_block),as.numeric(new_lot),sep="_"))
, pluto_lean %>% mutate(bbl = paste(BOROUGH,as.numeric(Block),as.numeric(Lot),sep="_"))
, by = c("billing_bbl"="bbl")
); beepr::beep(4)
pad_expanded_with_pluto %>% arrange(boro) %>% head() %>% glimpse()
lookat(5,27000,0523)
library(tidyverse)
library(tidyverse)
# This script takes NYC's 2017 Property Address Directory (PAD) file and
# maps each address to PLUTO.
# pad_bbl_expanded was created by adding a unique
# row for every row in PAD that had a range of lots for
# a single BBL. These were mostly condos
pad_bbl_expanded <- read_rds("data/PAD_Condo_BBLs_expanded_v002.rds")
pluto_lean <- read_rds("data/pluto_lean.rds")
lookat <- function(boro= 1,blck = 829,lt = 16,data = pluto_lean) data %>% filter(BOROUGH == boro, Block == as.numeric(blck), Lot == as.numeric(lt)) %>% arrange(desc(SALE_DATE)) %>% glimpse()
lookhead <- function(boro= 1,blck = 829,lt = 16,data = pluto_lean) data %>% filter(BOROUGH == boro, Block == blck, Lot == lt)
# join the PAD file to PLUTO using the 'billing bbl' fields
rm(pad_expanded_with_pluto)
pad_expanded_with_pluto <-
anti_join(pad_bbl_expanded %>% mutate(billing_bbl = paste(new_boro,as.numeric(new_block),as.numeric(new_lot),sep="_"))
, pluto_lean %>% mutate(bbl = paste(BOROUGH,as.numeric(Block),as.numeric(Lot),sep="_"))
, by = c("billing_bbl"="bbl")
); beepr::beep(4)
pad_expanded_with_pluto %>% arrange(boro) %>% head() %>% glimpse()
lookat(5,27000,0523)
shiny::runApp('/Volumes/F/AIG/aaProjects/BEWS/Project/App')
load("Data/RData/BEWS_Raw.RData")
load("Data/RData/BEWS_Tranformed.RData")
load("Data/RData/BEWS_Feature.RData")
setwd("/Volumes/F/AIG/aaProjects/BEWS/Project/code")
load("Data/RData/BEWS_Raw.RData")
load("Data/RData/BEWS_Tranformed.RData")
load("Data/RData/BEWS_Feature.RData")
setwd("/Volumes/F/AIG/aaProjects/BEWS/Project")
load("Data/RData/BEWS_Raw.RData")
load("Data/RData/BEWS_Tranformed.RData")
load("Data/RData/BEWS_Feature.RData")
runApp('App')
